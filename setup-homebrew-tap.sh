#!/bin/bash

# Script para criar e configurar o repositório homebrew-tap
# Execute: ./setup-homebrew-tap.sh

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}🍺 Aurora Boreas Homebrew Tap Setup${NC}"
echo "======================================"

# Verificar se gh CLI está instalado
if ! command -v gh &> /dev/null; then
    echo -e "${RED}❌ GitHub CLI não está instalado${NC}"
    echo "Instale com: brew install gh"
    exit 1
fi

# Verificar autenticação
if ! gh auth status &> /dev/null; then
    echo -e "${YELLOW}⚠️  Você não está autenticado no GitHub${NC}"
    echo "Execute: gh auth login"
    exit 1
fi

REPO_NAME="homebrew-tap"
USERNAME="nataliagranato"

echo -e "${BLUE}👤 Usuário: $USERNAME${NC}"
echo -e "${BLUE}📦 Repositório: $REPO_NAME${NC}"

# Verificar se o repositório já existe
if gh repo view "$USERNAME/$REPO_NAME" &> /dev/null; then
    echo -e "${GREEN}✓ Repositório já existe!${NC}"
    if [ -d "$REPO_NAME" ]; then
        echo -e "${YELLOW}📁 Removendo diretório local existente...${NC}"
        rm -rf "$REPO_NAME"
    fi
    echo -e "${BLUE}📥 Clonando repositório...${NC}"
    gh repo clone "$USERNAME/$REPO_NAME"
    cd "$REPO_NAME"
else
    echo -e "${BLUE}🔍 Repositório não encontrado. Tentando criar...${NC}"
    
    # Primeiro, tentar via REST API diretamente
    echo -e "${YELLOW}🔧 Tentativa 1: Criando via GitHub CLI...${NC}"
    if gh repo create "$USERNAME/$REPO_NAME" --public --description "Homebrew tap for Aurora Boreas" 2>/dev/null; then
        echo -e "${GREEN}✓ Repositório criado com sucesso!${NC}"
        gh repo clone "$USERNAME/$REPO_NAME"
        cd "$REPO_NAME"
    else
        echo -e "${YELLOW}⚠️  Falha na criação automática${NC}"
        echo -e "${BLUE}🛠️  Configurando para criação manual...${NC}"
        
        # Criar diretório local
        mkdir -p "$REPO_NAME"
        cd "$REPO_NAME"
        git init -b main
        
        echo ""
        echo -e "${YELLOW}┌─────────────────────────────────────────────┐${NC}"
        echo -e "${YELLOW}│          CRIAÇÃO MANUAL NECESSÁRIA          │${NC}"
        echo -e "${YELLOW}└─────────────────────────────────────────────┘${NC}"
        echo ""
        echo -e "${BLUE}� Passos para criar o repositório:${NC}"
        echo ""
        echo "1. Abra: https://github.com/new"
        echo "2. Repository name: $REPO_NAME"
        echo "3. Description: Homebrew tap for Aurora Boreas"
        echo "4. ✓ Public"
        echo "5. ✗ Add a README file"
        echo "6. ✗ Add .gitignore"
        echo "7. ✗ Choose a license"
        echo "8. Click 'Create repository'"
        echo ""
        echo -e "${GREEN}Quando terminar, pressione Enter para continuar...${NC}"
        read -r
        
        # Configurar remote
        git remote add origin "https://github.com/$USERNAME/$REPO_NAME.git"
        
        # Verificar se foi criado
        echo -e "${BLUE}🔍 Verificando se o repositório foi criado...${NC}"
        sleep 2
        if gh repo view "$USERNAME/$REPO_NAME" &> /dev/null; then
            echo -e "${GREEN}✓ Repositório encontrado!${NC}"
        else
            echo -e "${RED}❌ Repositório não encontrado. Verifique se foi criado corretamente.${NC}"
            exit 1
        fi
    fi
fi

# Criar estrutura de diretórios
echo -e "${YELLOW}📁 Criando estrutura de diretórios...${NC}"
mkdir -p Formula

# Criar README
echo -e "${YELLOW}📝 Criando README.md...${NC}"
cp ../homebrew-tap-README.md README.md

# Criar fórmula inicial (será substituída pelo GoReleaser)
echo -e "${YELLOW}🍺 Criando fórmula inicial...${NC}"
cat > Formula/auroraboreas.rb << 'EOF'
# This file is auto-generated by GoReleaser
# Do not edit manually
class Auroraboreas < Formula
  desc "Aurora Boreas - Poesia e visualização de céu estrelado"
  homepage "https://github.com/nataliagranato/auroraboreas"
  version "0.1.0"
  
  # This will be updated by GoReleaser
  url "https://github.com/nataliagranato/auroraboreas/releases/download/v0.1.0/auroraboreas-v0.1.0-darwin-amd64.tar.gz"
  sha256 "placeholder"
  
  def install
    bin.install "aurora"
  end

  test do
    system "#{bin}/aurora", "--version"
  end
end
EOF

# Criar .gitignore
echo -e "${YELLOW}📄 Criando .gitignore...${NC}"
cat > .gitignore << 'EOF'
.DS_Store
*.swp
*.swo
*~
EOF

# Commit inicial
echo -e "${YELLOW}📤 Fazendo commit inicial...${NC}"
git add .
git commit -m "Initial commit: Aurora Boreas Homebrew tap

- Add Formula directory structure
- Add initial auroraboreas formula (will be auto-updated)
- Add README with usage instructions"

# Push para o GitHub
git push origin main

echo -e "${GREEN}✅ Repositório homebrew-tap criado com sucesso!${NC}"
echo
echo -e "${BLUE}🔗 URLs importantes:${NC}"
echo -e "   Repositório: ${GREEN}https://github.com/$USERNAME/$REPO_NAME${NC}"
echo -e "   Clone URL: ${GREEN}git@github.com:$USERNAME/$REPO_NAME.git${NC}"
echo
echo -e "${BLUE}📝 Próximos passos:${NC}"
echo "1. Certifique-se de que o GoReleaser está configurado para usar este tap"
echo "2. Faça uma release no repositório principal para testar"
echo "3. Verifique se a fórmula é atualizada automaticamente"
echo
echo -e "${BLUE}🍺 Para instalar via Homebrew:${NC}"
echo "   brew tap $USERNAME/tap"
echo "   brew install auroraboreas"

cd ..
echo -e "${YELLOW}🧹 Limpando diretório temporário...${NC}"
rm -rf homebrew-tap

echo -e "${GREEN}🎉 Setup concluído!${NC}"
echo -e "${BLUE}💡 Nota: O diretório homebrew-tap foi removido localmente.${NC}"
echo -e "${BLUE}   Use o repositório separado: https://github.com/$USERNAME/$REPO_NAME${NC}"
